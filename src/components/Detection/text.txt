// 1. Install dependencies - DONE
// 2. Import dependencies - DONE
// 3. Setup Webcam - done
// 4. Define references to those - done
// 5. Load handpose - done
// 6. Detect function
// 7. Drawing utilities from tensorflow
// 8. Draw function

import React, { useRef, useState, useEffect } from "react";
import * as tf from "@tensorflow/tfjs";
import * as handpose from "@tensorflow-models/handpose";
import Webcam from "react-webcam";



const Detection = () => {
  const webcamRef = useRef(null);

  const runHandpose = async()=>{
    const net = await handpose.load();
    // loop and detect hands
    setInterval(()=>{
      detect(net)
    }, 100)
  };

  const detect = async (net) => {
    // check data is available
    if (
      typeof webcamRef.current !== "undefined" &&
      webcamRef.current !==null && 
      webcamRef.current.video.readyState ===4
    ){
      // get video properties
      const video = webcamRef.current.video;
      const videoWidth = webcamRef.current.video.videoWidth;
      const videoHeight = webcamRef.current.video.videoHeight;
    }

    // set video height and width
    webcamRef.current.video.width = videoWidth;
    webcamRef.current.video.height = videoHeight;
    // make detection
    const hand = await net.estimateHands(video);
    console.log(hand);
    // draw mesh

  };

  runHandpose();
  return (
    <div className="App">
      <button className="toggle-button bg-green-500 pointer mt-4 p-2" >
        Start Detection
      </button>
      <header className="App-header flex justify-center mt-2 mb-1">
        {/* <Webcam ref={webcamRef}/> */}
      </header>
    </div>
  )
}

export default Detection